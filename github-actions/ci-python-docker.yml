name: CI

on:
  push:
    branches:
      - main
    tags:
      - "*"
  workflow_dispatch:

jobs:
  pre-commit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - uses: pre-commit/action@v3.0.0

  # fetch some info from repo such as latest tag and name in lowercase
  get-repo-info:
    name: Get Repo Info
    runs-on: ubuntu-latest
    needs: pre-commit
    steps:
    - name: Checkout current repo
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Get Latest Tag
      id: get_tag
      run: |-
        tag="$(git tag | sort -V | tail -1)"
        echo "::set-output name=tag::$(git tag | sort -V | tail -1)"
    - name: Lowercase required vars
      id: lowercase
      run: |-
        echo "::set-output name=project_name::$(echo ${{ github.event.repository.name }} | tr '[:upper:]' '[:lower:]')"
        echo "::set-output name=repo_name::$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]')"
    outputs:
      tag: ${{ steps.get_tag.outputs.tag }}
      project_name: ${{ steps.lowercase.outputs.project_name }}
      repo_name: ${{ steps.lowercase.outputs.repo_name }}

  # build the docker image and push it to docker hub and ghcr
  docker-build:
    name: Build and Push Docker Images
    needs: get-repo-info
    runs-on: ubuntu-latest
    steps:
      - name: Checkout current repo
        uses: actions/checkout@v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set ENV Variables
        id: vars
        run: |
          echo "BUILD_DATE=$(date +'%Y-%m-%d %H:%M:%S')" >> $GITHUB_ENV
          echo "GIT_SHA=$(echo ${{ github.sha }} | cut -c1-7)" >> $GITHUB_ENV
          echo "GIT_REF=$(git symbolic-ref -q --short HEAD || git describe --tags --exact-match)" >> $GITHUB_ENV
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: false
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: |-
            ghcr.io/${{ needs.get-repo-info.outputs.repo_name }}:latest
            ghcr.io/${{ needs.get-repo-info.outputs.repo_name }}:${{ needs.get-repo-info.outputs.tag }}
            ${{ needs.get-repo-info.outputs.repo_name }}:latest
            ${{ needs.get-repo-info.outputs.repo_name }}:${{ needs.get-repo-info.outputs.tag }}
          labels: |-
            org.opencontainers.image.authors=${{ github.repository_owner }}
            org.opencontainers.image.created=${{ env.BUILD_DATE }}
            org.opencontainers.image.description=Created from commit ${{ env.GIT_SHA }} and ref ${{ env.GIT_REF }}
            org.opencontainers.image.ref.name=${{ env.GIT_REF }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.source=https://github.com/${{ needs.get-repo-info.outputs.repo_name }}
            org.opencontainers.image.version=${{ needs.get-repo-info.outputs.tag }}

  automerge-dependabot-pr:
    name: Automerge Dependabot PRs
    if: github.actor == 'dependabot[bot]' && github.event_name == 'pull_request'
    needs:
      - pre-commit
      - build-and-test
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      contents: write
    steps:
      - uses: fastify/github-action-merge-dependabot@v3.3.0
        with:
          target: minor
